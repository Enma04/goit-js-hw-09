{"mappings":"oeAAAA,EAAA,SAeA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBACrCG,EAAWJ,SAASC,cAAc,UACxC,IAAII,EAAe,GAInB,MAAMC,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBH,QAAiBC,QAE5CG,EAAK,sBAAoBJ,QAAeC,OAAW,GAEtDA,EAAM,IAKbJ,EAASW,iBAAiB,SAAUC,IAClCA,EAAEC,iBACF,IAAIC,EAAQC,SAASpB,EAAWqB,OAC5BC,EAAOF,SAASjB,EAAUkB,OAC1BE,EAASH,SAAShB,EAAYiB,OAE9BG,EAAYF,EAAOH,EAEvB,IAAI,IAAIM,EAAE,EAAGA,GAAGF,EAAQE,GAAG,EAAG,CAC5B,IAAIC,EAAOnB,EAAckB,EAAGD,GAC5BlB,EAAaqB,KAAKD,GAClBF,GAAaF,C,CAGfZ,QAAQkB,IAAItB,GACTuB,MAAKC,GAAYC,QAAQC,IAAIF,KAC7BG,OAAMC,GAASH,QAAQC,IAAIE,IAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n/*\nNotiflix simple messages:\n-------------------------------\n\nNotiflix.Notify.success('Sol lucet omnibus');\n\nNotiflix.Notify.failure('Qui timide rogat docet negare');\n\nNotiflix.Notify.warning('Memento te hominem esse');\n\nNotiflix.Notify.info('Cogito ergo sum');\n*/\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst btnStart = document.querySelector(\"button\");\nlet promiseArray = [];\n\n\n\nconst createPromise = (position, pasos) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${pasos} ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${pasos} ms`);\n      }\n    }, pasos); //setTimeout\n  }); //promise\n} //function\n\n\nbtnStart.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  let delay = parseInt(delayInput.value);\n  let step = parseInt(stepInput.value);\n  let amount = parseInt(amountInput.value);\n\n  let increment = step + delay;\n\n  for(let i=1; i<=amount; i+=1) {\n    let prom = createPromise(i, increment);\n    promiseArray.push(prom);\n    increment += step;\n  }\n\n  Promise.all(promiseArray)\n    .then(resolved => console.log(resolved))\n    .catch(error => console.log(error));\n\n/*   setTimeout(() => {\n    console.log(delay);\n    console.log(step);\n    console.log(amount);\n\n    \n  }, delay + (step * amount)); */\n});\n\n"],"names":["parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$btnStart","$47d4ff9957288465$var$promiseArray","$47d4ff9957288465$var$createPromise","position","pasos","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay","parseInt","value","step","amount","increment","i","prom","push","all","then","resolved","console","log","catch","error"],"version":3,"file":"03-promises.0ce90f91.js.map"}