{"mappings":"gfAAAA,EAAA,SAeA,IAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBACrCG,EAAWJ,SAASC,cAAc,UACpCI,EAAe,GAIbC,EAAgB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,QAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,O,GAEnDA,E,KAKPJ,EAASY,iBAAiB,SAAS,SAACC,GAClCA,EAAEC,iBAOF,IANA,IAAIC,EAAQC,SAASrB,EAAWsB,OAC5BC,EAAOF,SAASlB,EAAUmB,OAC1BE,EAASH,SAASjB,EAAYkB,OAE9BG,EAAYF,EAAOH,EAEfM,EAAE,EAAGA,GAAGF,EAAQE,GAAG,EAAG,CAC5B,IAAIC,EAAOpB,EAAcmB,EAAGD,GAC5BnB,EAAasB,KAAKD,GAClBF,GAAaF,C,CAGfb,QAAQmB,IAAIvB,GACTwB,MAAK,SAAAC,G,OAAYC,QAAQC,IAAIF,E,IAC7BG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E,GAQC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n/*\nNotiflix simple messages:\n-------------------------------\n\nNotiflix.Notify.success('Sol lucet omnibus');\n\nNotiflix.Notify.failure('Qui timide rogat docet negare');\n\nNotiflix.Notify.warning('Memento te hominem esse');\n\nNotiflix.Notify.info('Cogito ergo sum');\n*/\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst btnStart = document.querySelector(\"button\");\nlet promiseArray = [];\n\n\n\nconst createPromise = (position, pasos) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${pasos} ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${pasos} ms`);\n      }\n    }, pasos); //setTimeout\n  }); //promise\n} //function\n\n\nbtnStart.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  let delay = parseInt(delayInput.value);\n  let step = parseInt(stepInput.value);\n  let amount = parseInt(amountInput.value);\n\n  let increment = step + delay;\n\n  for(let i=1; i<=amount; i+=1) {\n    let prom = createPromise(i, increment);\n    promiseArray.push(prom);\n    increment += step;\n  }\n\n  Promise.all(promiseArray)\n    .then(resolved => console.log(resolved))\n    .catch(error => console.log(error));\n\n/*   setTimeout(() => {\n    console.log(delay);\n    console.log(step);\n    console.log(amount);\n\n    \n  }, delay + (step * amount)); */\n});\n\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$btnStart","$ce04d3a99e08e73b$var$promiseArray","$ce04d3a99e08e73b$var$createPromise","position","pasos","Promise","resolve","reject","setTimeout","Math","random","concat","addEventListener","e","preventDefault","delay","parseInt","value","step","amount","increment","i","prom","push","all","then","resolved","console","log","catch","error"],"version":3,"file":"03-promises.4baf1bfb.js.map"}